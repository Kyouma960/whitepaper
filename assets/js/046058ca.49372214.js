"use strict";(self.webpackChunkburst=self.webpackChunkburst||[]).push([[1794],{709:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/splitting-bc1a1ea7251dc450ac50f73157cd74c7.png"},1370:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"token_operations","title":"Advance Token Operations","description":"It can get pretty restrictive to transfer individual batches of TRST tokens one by one because of how each TRST token is different from the rest. For that, we can have a merging and splitting mechanism that can solve the issue regarding the need for variable amounts of transactions.","source":"@site/docs/11-token_operations.mdx","sourceDirName":".","slug":"/token_operations","permalink":"/docs/token_operations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/11-token_operations.mdx","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Developer Funding","permalink":"/docs/funding"},"next":{"title":"Comparison","permalink":"/docs/comparison/"}}');var s=n(4848),a=n(8453);const r={},o="Advance Token Operations",h={},l=[{value:"Splitting TRST",id:"splitting-trst",level:3},{value:"Merging TRST",id:"merging-trst",level:3}];function d(e){const t={h1:"h1",h3:"h3",header:"header",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"advance-token-operations",children:"Advance Token Operations"})}),"\n",(0,s.jsx)(t.p,{children:"It can get pretty restrictive to transfer individual batches of TRST tokens one by one because of how each TRST token is different from the rest. For that, we can have a merging and splitting mechanism that can solve the issue regarding the need for variable amounts of transactions."}),"\n",(0,s.jsx)(t.h3,{id:"splitting-trst",children:"Splitting TRST"}),"\n",(0,s.jsx)(t.p,{children:"Splitting is the default way of transfer since the TRST tokens will just have the same epoch and link on all of the splits; only the amount will vary."}),"\n",(0,s.jsx)(t.p,{children:"If you can see in this example:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"splitting",src:n(709).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(t.p,{children:"The 50 BRN that got burnt, can only ever transact in 50 TRST or less, and any kind of transfer will involve splitting of that 50 TRST into smaller amounts that add upto 50 TRST."}),"\n",(0,s.jsx)(t.p,{children:"This is pretty straightforward as all of the transactions in this graph will only have one burn transaction."}),"\n",(0,s.jsx)(t.p,{children:"So, all of the tokens can be orphaned simultaneously when the expiry date for them has been reached, or if the wallet is found to be illegitimate."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"splitting",src:n(2844).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(t.h3,{id:"merging-trst",children:"Merging TRST"}),"\n",(0,s.jsx)(t.p,{children:"Merging is a bit tricky since the epoch determines the expiry date and originator of the TRST tokens, and not all the merged TRST tokens will have the same epoch."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"splitting",src:n(7682).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(t.p,{children:"So, what we can do is make it so that the expiry date for the newly merged TRST token to always be the same as the one that will expire the fastest, among the merged tokens."}),"\n",(0,s.jsx)(t.p,{children:"For example, here we merge TRST with similar time till expiry into one TRST token, and the time till expiry for this token is set to the one that will expire the fastest, i.e. 140 days."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"splitting",src:n(2469).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(t.p,{children:"This will allow the people to self-organize and merge their TRST tokens in a way that groups TRST tokens of similar expiry dates into one TRST token, which increases its time till expiry, which in turn can retain its value."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"splitting",src:n(7139).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(t.p,{children:"The merged tokens will always point to the merge transaction as their epoch, in future transactions. They will act the same way as unmerged TRST, the only difference is that their epoch is now the hash of the merge transaction."}),"\n",(0,s.jsx)(t.p,{children:"What will happen in case an illegitimate TRST got merged?"}),"\n",(0,s.jsx)(t.p,{children:"In that case, after the wallet has been determined to be illegitimate, the nodes will unverify the wallet, and inform all other nodes to orphan all the TRST tokens originating from that wallet, immediately. This also implies that the merged tokens should also get orphaned in a sensible way."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"splitting",src:n(3160).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(t.p,{children:"A simple method for doing that would be as shown in the diagram."}),"\n",(0,s.jsx)(t.p,{children:"Here, 10 of the illegitimate TRST was merged to  make 50 merged TRST. After the nodes unverify the wallet, the nodes will start the process of splitting all the merge transaction associated with that wallet, in a way that makes all of the current holders of the merged tokens lose some of the TRST in the same ratio as everybody else. The total amount that will be split and made untransferrable, will equal to the amount of illegitimate TRST that was merged."}),"\n",(0,s.jsx)(t.p,{children:"So, this is one of the general formula for splitting the merged TRST into transferable and untransferrable ones without being unfair."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"splitting",src:n(8352).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(t.h1,{id:"additional",children:"Additional"}),"\n",(0,s.jsx)(t.p,{children:'There can be something like a "merger graph" that can be stored by the nodes that will link every merge transaction with the epoch of the merged tokens, or the previous merge transactions it was derived from.'}),"\n",(0,s.jsx)(t.p,{children:"This way, the split will be performed easily, as there is no room for ambiguity when it comes to the originator and the current state of all the tokens."})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2469:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/merge_time-e3f9f98e5d64b0b6beac30e78b9d712b.png"},2844:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/split_orphan-709fe29881745ceb44bcaf17c9ee3409.png"},3160:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/merge_split-58e8d24278ff15fa2129c9d62d16c268.png"},7139:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/merge_epoch-0a7944eed6fec75e6cd54d66ca3878a4.png"},7682:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/different-ab3ccef45a95a3f95a96f09b1ddd00e5.png"},8352:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/merge_general-2149e45e970919cfa43468a7f36270c3.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(6540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);